#!/usr/bin/env bash
set -euo pipefail

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### make info messages hi-vis
info_msg () {
	echo -e '\E[37;44m'"\033[1m::::: "$1"\033[0m"
	tput sgr0
}

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

# add a module into openresty build system
add_custom_nginx_module () {

	### get module info from function params

	MODULE_GITHUB_USER="$1"
	MODULE_GITHUB_PROJECT="$2"
	OPENRESTY_WORKING_DIRECTORY="$3"

	### get info for specified module

	info_msg "===== getting github project info for ${MODULE_GITHUB_USER}/${MODULE_GITHUB_PROJECT} latest version"
	MODULE_GITHUB_INFO=$(curl https://api.github.com/repos/${MODULE_GITHUB_USER}/${MODULE_GITHUB_PROJECT}/tags 2>/dev/null)
	MODULE_GITHUB_VERSION=$(echo "${MODULE_GITHUB_INFO}"| jq -r '.[0].name')
	MODULE_GITHUB_TARBALL_URL=$(echo "${MODULE_GITHUB_INFO}"| jq -r '.[0].tarball_url')
	MODULE_GITHUB_COMMIT_STRING=$(echo "${MODULE_GITHUB_INFO}" | jq -r '.[0].commit.sha[0:7]')
	MODULE_GITHUB_PACKAGE_NAME="${MODULE_GITHUB_USER}-${MODULE_GITHUB_PROJECT}-${MODULE_GITHUB_COMMIT_STRING}"

	### add specified module to the openresty build system

	ESCAPED_MODULE_GITHUB_TARBALL_URL=$(echo "${MODULE_GITHUB_TARBALL_URL}" | sed 's/\//\\\//g')
	OPENRESTY_MODULE_PACKAGE_NAME="${MODULE_GITHUB_PROJECT}-${MODULE_GITHUB_VERSION}"
	OPENRESTY_MODULE_TARBALL_NAME="${OPENRESTY_MODULE_PACKAGE_NAME}.tar.gz"

	info_msg "===== adding ${MODULE_GITHUB_PROJECT} to the ${OPENRESTY_GITHUB_PROJECT} 'mirror-tarballs' script"
	sed "s/\(^.* \*\.tar\.gz$\)/ver=${MODULE_GITHUB_VERSION}\n\$root\/util\/get-tarball \"${ESCAPED_MODULE_GITHUB_TARBALL_URL}\" -O \"${OPENRESTY_MODULE_TARBALL_NAME}\" || exit 1\ntar -xzf ${OPENRESTY_MODULE_TARBALL_NAME} || exit 1\nmv ${MODULE_GITHUB_PACKAGE_NAME} ${OPENRESTY_MODULE_PACKAGE_NAME} || exit 1\n\n#################################\n\n\1/g" -i ${OPENRESTY_WORKING_DIRECTORY}/util/mirror-tarballs

}

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### get started

info_msg "##### setting up openresty/nginx + push-stream module #####"

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### set google DNS resolver to avoid slow-DNS-forwarding pain

info_msg "===== adding google DNS resolver inside VM"
sed \
	-e 's/^nameserver .*/nameserver 8.8.8.8/g' \
	-i /etc/resolv.conf
info_msg "----- checking for google DNS resolver"
fgrep nameserver /etc/resolv.conf

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### update OS stuff

info_msg "===== getting wheezy-backports apt sources list"
cat >> /etc/apt/sources.list <<EOF
deb http://ftp.uk.debian.org/debian wheezy-backports main
deb-src http://ftp.uk.debian.org/debian wheezy-backports main
EOF

info_msg "===== updating system package list with wheezy-backports"
info_msg "apt-get -o Acquire::Check-Valid-Until=false update"
apt-get -o Acquire::Check-Valid-Until=false update

info_msg "===== getting debian keyring packages"
info_msg "apt-get install -y debian-keyring debian-archive-keyring"
apt-get install -y debian-keyring debian-archive-keyring

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install useful stuff

info_msg "===== installing useful tools"
info_msg "apt-get install -y jq"
apt-get install -y jq

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install openresty/nginx stuff

info_msg "===== installing openresty prerequisites"
info_msg "apt-get install -y init-system-helpers build-essential libreadline-dev libncurses5-dev libssl-dev perl make dos2unix"
apt-get install -y init-system-helpers build-essential libreadline-dev libncurses5-dev libssl-dev perl make dos2unix

info_msg "===== installing debian nginx files"
info_msg "apt-get install -y nginx-common"
apt-get install -y nginx-common

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install markdown2pod

info_msg "===== installing markdown2pod"
PERL_MM_USE_DEFAULT=1 perl -MCPAN -e "CPAN::Shell->notest('install', 'Markdown::Pod')"
info_msg "checking for markdown2pod ..."
which markdown2pod

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install maxmind db
info_msg "===== installing maxmind db library"
MAXMIND_INSTALL_PATH=/usr/share/maxmind
MAXMIND_LIB_PATH=${MAXMIND_INSTALL_PATH}/lib
MAXMIND_INC_PATH=${MAXMIND_INSTALL_PATH}/include
curl -OL https://github.com/maxmind/libmaxminddb/releases/download/1.1.2/libmaxminddb-1.1.2.tar.gz
tar xzf libmaxminddb-1.1.2.tar.gz
pushd libmaxminddb-1.1.2
./configure --prefix=${MAXMIND_INSTALL_PATH}
make
make install
info_msg "===== adding maxmind db library to ld.so.conf"
echo "${MAXMIND_LIB_PATH}" > /etc/ld.so.conf.d/libmaxminddb.conf
ldconfig -v 2>/dev/null |grep -i maxmind
popd

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install FPM meta-packager | https://github.com/jordansissel/fpm

info_msg "===== installing fpm prerequisites"
info_msg "apt-get install -y ruby-dev"
apt-get install -y ruby-dev
info_msg "===== installing fpm"
info_msg "gem install fpm"
gem install fpm

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

# get latest PCRE library v1 branch release, to enable pcre-JIT compiler in nginx/ngx_lua

PCRE_VERSION=$(\
	curl ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/ 2>/dev/null \
	| awk '{print $9}' \
	| egrep '^pcre-.*bz2$' \
	| tail -1 \
	| sed 's/.tar.bz2$//g' \
	| tr -d '\n'\
)
info_msg "----- downloading PCRE library"
info_msg "curl -L -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/${PCRE_VERSION}.tar.bz2"
curl -L -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/${PCRE_VERSION}.tar.bz2
info_msg "unzipping ${PCRE_VERSION}"
tar jxf ${PCRE_VERSION}.tar.bz2
info_msg "checking for ${PCRE_VERSION}..."
ls -ld ${PCRE_VERSION}

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### kick off openresty install | http://openresty.org/

OPENRESTY_GITHUB_USER='openresty'
OPENRESTY_GITHUB_PROJECT='ngx_openresty'
info_msg "===== getting github project info for ${OPENRESTY_GITHUB_USER}/${OPENRESTY_GITHUB_PROJECT} latest version"
# get all the tags
OPENRESTY_GITHUB_RESPONSE=$(curl https://api.github.com/repos/${OPENRESTY_GITHUB_USER}/${OPENRESTY_GITHUB_PROJECT}/tags 2>/dev/null)
# strip out release candidate
OPENRESTY_GITHUB_INFO=$(echo "${OPENRESTY_GITHUB_RESPONSE}"| jq -r '. - map(select(.name|endswith("rc1")))')
OPENRESTY_GITHUB_VERSION=$(echo "${OPENRESTY_GITHUB_INFO}"| jq -r '.[0].name')
OPENRESTY_GITHUB_TARBALL_URL=$(echo "${OPENRESTY_GITHUB_INFO}"| jq -r '.[0].tarball_url')
OPENRESTY_GITHUB_COMMIT_STRING=$(echo "${OPENRESTY_GITHUB_INFO}" | jq -r '.[0].commit.sha[0:7]')
OPENRESTY_GITHUB_PACKAGE_NAME="${OPENRESTY_GITHUB_USER}-${OPENRESTY_GITHUB_PROJECT}-${OPENRESTY_GITHUB_COMMIT_STRING}"

info_msg "===== retrieving ${OPENRESTY_GITHUB_USER}/${OPENRESTY_GITHUB_PROJECT} version ${OPENRESTY_GITHUB_VERSION}"
OPENRESTY_LOCAL_TARBALL_NAME=${OPENRESTY_GITHUB_PACKAGE_NAME}-${OPENRESTY_GITHUB_VERSION}.tar.gz
curl -o ${OPENRESTY_LOCAL_TARBALL_NAME} -L ${OPENRESTY_GITHUB_TARBALL_URL} 2>/dev/null

tar zxvf ${OPENRESTY_LOCAL_TARBALL_NAME}
info_msg "===== changing to ${OPENRESTY_GITHUB_USER} directory"
cd ${OPENRESTY_GITHUB_PACKAGE_NAME}
ls -l

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

info_msg "adding custom modules to openresty build"

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

###	push-stream-module | https://github.com/wandenberg/nginx-push-stream-module

PUSH_STREAM_MODULE_NAME="nginx-push-stream-module"
add_custom_nginx_module "wandenberg" "${PUSH_STREAM_MODULE_NAME}" "$(pwd)"

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

###	cache purge module | https://github.com/FRiCKLE/ngx_cache_purge

CACHE_PURGE_MODULE_NAME="ngx_cache_purge"
add_custom_nginx_module "FRiCKLE" "${CACHE_PURGE_MODULE_NAME}" "$(pwd)"

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

###	geoip2 module | https://github.com/leev/ngx_http_geoip2_module

GEOIP2_MODULE_NAME="ngx_http_geoip2_module"
add_custom_nginx_module "leev" "${GEOIP2_MODULE_NAME}" "$(pwd)"

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### pull in openresty packages

info_msg "===== building ${OPENRESTY_GITHUB_PROJECT}-${OPENRESTY_GITHUB_COMMIT_STRING}/${OPENRESTY_GITHUB_VERSION} (= pre-build, pull down bundle) ..."
make -j "$(( $(cat /proc/cpuinfo | egrep ^processor | wc -l) + 1))"

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### add nginx-push-stream-module/ngx_cache_purge/ngx_http_geoip2_module
### into openresty configure script.
### values in key-value pairs http_k_k => http_v_v are names of github projects
### ie nginx-push-stream-module, ngx_cache_purge, ngx_http_geoip2_module
### super brittle, mmm

LOCAL_OPENRESTY_PACKAGE_VERSION=$(echo "${OPENRESTY_GITHUB_VERSION}" | sed -e 's/^v//g')
OPENRESTY_LOCAL_NGX_DIR="${OPENRESTY_GITHUB_PROJECT}-${LOCAL_OPENRESTY_PACKAGE_VERSION}"
info_msg "===== adding ${PUSH_STREAM_MODULE_NAME}, ${CACHE_PURGE_MODULE_NAME}, ${GEOIP2_MODULE_NAME} to ${OPENRESTY_LOCAL_NGX_DIR}/configure ..."
sed \
	-e "s/\(^ *\)\(\[http_rds_csv => 'rds-csv-nginx-module'\],$\)/\1\2\n\1[http_push_stream => '${PUSH_STREAM_MODULE_NAME}'],\n\1[http_cache_purge => '${CACHE_PURGE_MODULE_NAME}'],\n\1[http_geoip2 => '${GEOIP2_MODULE_NAME}'],/g" \
	-i ${OPENRESTY_LOCAL_NGX_DIR}/configure

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### patch nginx src to have a longer NGX_MAX_ERROR_STR
### so that apps can log more detailed info

NGX_MAX_ERROR_STR=8192
info_msg "===== patching nginx to have NGX_MAX_ERROR_STR = ${NGX_MAX_ERROR_STR} to have longer error log messages"
pushd ${OPENRESTY_LOCAL_NGX_DIR}/bundle/nginx-[0-9\.]*
sed "s/\(#define NGX_MAX_ERROR_STR *\)4096/\1\t${NGX_MAX_ERROR_STR}/g" -i src/core/ngx_log.h
# fix vim coloring with an errant "
info_msg "----- checking for NGX_MAX_ERROR_STR"
fgrep "define NGX_MAX_ERROR_STR" src/core/ngx_log.h
popd

###	#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#
###	
###	### patch nginx src to include https://github.com/openresty/lua-nginx-module/commit/b948841c0
###	### so that subrequests to WebDAV locations send correct headers
###	
###	info_msg "===== patching nginx so that DAV subrequests send correct headers"
###	pushd ${OPENRESTY_LOCAL_NGX_DIR}/bundle/ngx_lua-[0-9\.]*
###	set +e
###	patch -p1 < /vagrant/patches/ngx_lua/0001-bugfix-setting-builtin-request-headers-Depth-Destina.patch
###	set -e
###	info_msg "----- checking for DAV subrequest patch"
###	fgrep -A 2 Destination src/ngx_http_lua_headers_in.c
###	popd
###	
###	#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#
###	
###	### patch nginx src to include https://github.com/openresty/lua-nginx-module/commit/4a9d4b11
###	### so that subrequests return correct status codes
###	
###	info_msg "===== patching nginx so that DAV subrequests return correct status codes"
###	pushd ${OPENRESTY_LOCAL_NGX_DIR}/bundle/ngx_lua-[0-9\.]*
###	set +e
###	patch -p1 < /vagrant/patches/ngx_lua/0001-bugfix-subrequest-response-status-codes-between-the-.patch
###	set -e
###	info_msg "----- checking for subrequest HTTP response patch"
###	fgrep -B 1 -A 1 'pr_coctx->sr_statuses[ctx->index] = rc;' src/ngx_http_lua_subrequest.c
###	popd

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### run openresty configure script, using choice configure options from 'nginx -V' in debian nginx package
### so we can take advantage of the very lovely init script and conf/packaging work the debian folks have done

OPENRESTY_INSTALL_PREFIX=/usr/share/openresty
OPENRESTY_INSTALL_PREFIX_ESCAPED=$(echo ${OPENRESTY_INSTALL_PREFIX} | sed 's/\//\\\//g')

info_msg "===== configure-ing ${OPENRESTY_LOCAL_NGX_DIR} (with LD_LIBRARY_PATH=${MAXMIND_LIB_PATH}, -I${MAXMIND_INC_PATH})"
cd ${OPENRESTY_LOCAL_NGX_DIR}
/usr/bin/env LD_LIBRARY_PATH=${MAXMIND_LIB_PATH} ./configure \
--with-cc-opt="-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -I${MAXMIND_INC_PATH}" \
--with-ld-opt="-Wl,-z,relro -L${MAXMIND_LIB_PATH} -lmaxminddb" \
--with-luajit \
--with-pcre=../../${PCRE_VERSION} \
--with-pcre-jit \
--with-pcre-conf-opt="--enable-unicode-properties" \
--with-http_dav_module \
--prefix=${OPENRESTY_INSTALL_PREFIX} \
--conf-path=/etc/nginx/nginx.conf \
--http-log-path=/var/log/nginx/access.log \
--error-log-path=/var/log/nginx/error.log \
--lock-path=/var/lock/nginx.lock \
--pid-path=/run/nginx.pid \
--http-client-body-temp-path=/var/lib/nginx/body \
--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
--http-proxy-temp-path=/var/lib/nginx/proxy \
--http-scgi-temp-path=/var/lib/nginx/scgi \
--http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
--with-debug \
--with-ipv6 \
--with-http_ssl_module \
--with-http_stub_status_module \
--with-http_realip_module \
--with-http_auth_request_module \
--with-http_addition_module \
--with-http_gzip_static_module \
--with-http_sub_module

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### build & install openresty
### - package created by FPM will be openresty_<version>+push-stream-<version>_<arch>.deb

LOCAL_OPENRESTY_PACKAGE_NAME="${OPENRESTY_GITHUB_PROJECT}-${LOCAL_OPENRESTY_PACKAGE_VERSION}+realtime-geoip2"
info_msg "===== building ${LOCAL_OPENRESTY_PACKAGE_NAME}"
make -j "$(( $(cat /proc/cpuinfo | egrep ^processor | wc -l) + 1))"

info_msg "===== installing ${LOCAL_OPENRESTY_PACKAGE_NAME}"
make install

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### set up necessary files for .deb package

# custom init script with paths pointing to .deb versions
info_msg "===== creating custom init script"
SYSTEM_INIT_DIR=/etc/init.d
SYSTEM_INIT_FILE=${SYSTEM_INIT_DIR}/nginx
NGINX_ETC_DIR=${OPENRESTY_INSTALL_PREFIX}/etc
NGINX_INIT_DIR=${NGINX_ETC_DIR}/init.d
NGINX_INIT_FILE=${NGINX_INIT_DIR}/nginx
mkdir -p ${NGINX_INIT_DIR}
sed \
	-e 's/^PATH=\(.*\)/PATH='${OPENRESTY_INSTALL_PREFIX_ESCAPED}'\/nginx\/sbin:\1/g' \
	-e 's/^DAEMON=\(.*\)/DAEMON='${OPENRESTY_INSTALL_PREFIX_ESCAPED}'\/nginx\/sbin\/nginx/g' \
	< ${SYSTEM_INIT_FILE} \
	> ${NGINX_INIT_FILE}

# create after-install script for .deb file
# replaces standard nginx init script from
# 'nginx-common' with a susbsitute version
# identical except for paths modified as above
# and adds libmaxminddb to ld.so.conf
AFTER_INSTALL_SCRIPT=${NGINX_ETC_DIR}/create-init-symlink
cat > ${AFTER_INSTALL_SCRIPT} <<EOF
rm ${SYSTEM_INIT_FILE}
chmod +x ${NGINX_INIT_FILE}
ln -s ${NGINX_INIT_FILE} ${SYSTEM_INIT_FILE}
echo ${MAXMIND_LIB_PATH} > /etc/ld.so.conf.d/libmaxminddb.conf
ldconfig -v 2>/dev/null | grep -i maxmind
EOF

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### build the .deb package

FPM_OPENRESTY_PACKAGE_VERSION=${LOCAL_OPENRESTY_PACKAGE_VERSION}+realtime-geoip2-vbox
FPM_OPENRESTY_FILE_PATHS="${MAXMIND_INSTALL_PATH} ${OPENRESTY_INSTALL_PREFIX}/etc ${OPENRESTY_INSTALL_PREFIX}/bin ${OPENRESTY_INSTALL_PREFIX}/luajit ${OPENRESTY_INSTALL_PREFIX}/lualib ${OPENRESTY_INSTALL_PREFIX}/nginx"
info_msg "===== building .deb package for ${OPENRESTY_GITHUB_USER}/${FPM_OPENRESTY_PACKAGE_VERSION}"
info_msg "fpm -s dir -t deb -d 'nginx-common' -n ${OPENRESTY_GITHUB_USER} -v ${FPM_OPENRESTY_PACKAGE_VERSION} --after-install ${AFTER_INSTALL_SCRIPT} ${FPM_OPENRESTY_FILE_PATHS}"
fpm -s dir -t deb -d 'nginx-common' -n ${OPENRESTY_GITHUB_USER} -v ${FPM_OPENRESTY_PACKAGE_VERSION} --after-install ${AFTER_INSTALL_SCRIPT} ${FPM_OPENRESTY_FILE_PATHS}

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### get on the home straight

info_msg "===== moving .deb package to /vagrant"
mv ${OPENRESTY_GITHUB_USER}_*.deb /vagrant
info_msg "ls -l /vagrant"
ls -l /vagrant

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### happy happy joy joy

info_msg "===== build complete" 
info_msg "##### done setting up openresty/nginx + push-stream module. #####"
exit 0
