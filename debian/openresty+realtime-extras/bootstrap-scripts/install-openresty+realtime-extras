#!/bin/bash
set -euo pipefail

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### make info messages hi-vis

info_msg () {
	echo -e '\E[37;44m'"\033[1m::::: "$1"\033[0m"
	tput sgr0
}

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### get started

info_msg "##### setting up openresty/nginx + push-stream module #####"

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### set google DNS resolver to avoid slow-DNS-forwarding pain
info_msg "===== adding google DNS resolver inside VM"
sed \
	-e 's/^nameserver .*/nameserver 8.8.8.8/g' \
	-i /etc/resolv.conf
info_msg "----- checking for google DNS resolver"
fgrep nameserver /etc/resolv.conf

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### update OS stuff

info_msg "===== getting wheezy-backports apt sources list"
cat >> /etc/apt/sources.list <<EOF
deb http://ftp.uk.debian.org/debian wheezy-backports main
deb-src http://ftp.uk.debian.org/debian wheezy-backports main
EOF

info_msg "===== updating system package list with wheezy-backports"
info_msg "apt-get -o Acquire::Check-Valid-Until=false update"
apt-get -o Acquire::Check-Valid-Until=false update

info_msg "===== getting debian keyring packages"
info_msg "apt-get install -y debian-keyring debian-archive-keyring"
apt-get install -y debian-keyring debian-archive-keyring

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install useful stuff

info_msg "===== installing useful tools"
info_msg "apt-get install -y jq"
apt-get install -y jq

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install openresty/nginx stuff

info_msg "===== installing openresty prerequisites"
info_msg "apt-get install -y init-system-helpers build-essential libreadline-dev libncurses5-dev libssl-dev perl make libgeoip1 libgeoip-dev"
apt-get install -y init-system-helpers build-essential libreadline-dev libncurses5-dev libssl-dev perl make libgeoip1 libgeoip-dev

info_msg "===== installing debian nginx files"
info_msg "apt-get install -y nginx-common"
apt-get install -y nginx-common

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### install FPM meta-packager | https://github.com/jordansissel/fpm

info_msg "===== installing fpm prerequisites"
info_msg "apt-get install -y ruby-dev"
apt-get install -y ruby-dev
info_msg "===== installing fpm"
info_msg "gem install fpm"
gem install fpm

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

# get PCRE library to enable JIT compiler in nginx/ngx_lua

PCRE_VERSION=pcre-8.37
info_msg "----- downloading PCRE library"
info_msg "curl -L -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/${PCRE_VERSION}.tar.bz2"
curl -L -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/${PCRE_VERSION}.tar.bz2
info_msg "unzipping ${PCRE_VERSION}"
tar jxf ${PCRE_VERSION}.tar.bz2
info_msg "checking for ${PCRE_VERSION}..."
ls -ld ${PCRE_VERSION}

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### kick off openresty install | http://openresty.org/

OPENRESTY_GITHUB_USER='openresty'
OPENRESTY_GITHUB_PROJECT='ngx_openresty'
info_msg "===== getting github project info for ${OPENRESTY_GITHUB_USER}/${OPENRESTY_GITHUB_PROJECT} latest version"
# get all the tags
OPENRESTY_GITHUB_RESPONSE=$(curl https://api.github.com/repos/${OPENRESTY_GITHUB_USER}/${OPENRESTY_GITHUB_PROJECT}/tags 2>/dev/null)
# strip out release candidate
OPENRESTY_GITHUB_INFO=$(echo "${OPENRESTY_GITHUB_RESPONSE}"| jq -r '. - map(select(.name|endswith("rc1")))')
OPENRESTY_GITHUB_VERSION=$(echo "${OPENRESTY_GITHUB_INFO}"| jq -r '.[0].name')
OPENRESTY_GITHUB_TARBALL_URL=$(echo "${OPENRESTY_GITHUB_INFO}"| jq -r '.[0].tarball_url')
OPENRESTY_GITHUB_COMMIT_STRING=$(echo "${OPENRESTY_GITHUB_INFO}" | jq -r '.[0].commit.sha[0:7]')
OPENRESTY_GITHUB_PACKAGE_NAME="${OPENRESTY_GITHUB_USER}-${OPENRESTY_GITHUB_PROJECT}-${OPENRESTY_GITHUB_COMMIT_STRING}"

info_msg "===== retrieving ${OPENRESTY_GITHUB_USER}/${OPENRESTY_GITHUB_PROJECT} version ${OPENRESTY_GITHUB_VERSION}"
OPENRESTY_LOCAL_TARBALL_NAME=${OPENRESTY_GITHUB_PACKAGE_NAME}-${OPENRESTY_GITHUB_VERSION}.tar.gz
curl -o ${OPENRESTY_LOCAL_TARBALL_NAME} -L ${OPENRESTY_GITHUB_TARBALL_URL} 2>/dev/null

tar zxvf ${OPENRESTY_LOCAL_TARBALL_NAME}
info_msg "===== changing to ${OPENRESTY_GITHUB_USER} directory"
cd ${OPENRESTY_GITHUB_PACKAGE_NAME}
ls -l

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### get info for push-stream-module | https://github.com/wandenberg/nginx-push-stream-module

NPSM_GITHUB_USER='wandenberg'
NPSM_GITHUB_PROJECT='nginx-push-stream-module'
info_msg "===== getting github project info for ${NPSM_GITHUB_USER}/${NPSM_GITHUB_PROJECT} latest version"
NPSM_GITHUB_INFO=$(curl https://api.github.com/repos/${NPSM_GITHUB_USER}/${NPSM_GITHUB_PROJECT}/tags 2>/dev/null)
NPSM_GITHUB_VERSION=$(echo "${NPSM_GITHUB_INFO}"| jq -r '.[0].name')
NPSM_GITHUB_TARBALL_URL=$(echo "${NPSM_GITHUB_INFO}"| jq -r '.[0].tarball_url')
NPSM_GITHUB_COMMIT_STRING=$(echo "${NPSM_GITHUB_INFO}" | jq -r '.[0].commit.sha[0:7]')
NPSM_GITHUB_PACKAGE_NAME="${NPSM_GITHUB_USER}-${NPSM_GITHUB_PROJECT}-${NPSM_GITHUB_COMMIT_STRING}"

### add push-stream-module to the openresty build system

ESCAPED_NPSM_GITHUB_TARBALL_URL=$(echo "${NPSM_GITHUB_TARBALL_URL}" | sed 's/\//\\\//g')
OPENRESTY_NPSM_PACKAGE_NAME="${NPSM_GITHUB_PROJECT}-${NPSM_GITHUB_VERSION}"
OPENRESTY_NPSM_TARBALL_NAME="${OPENRESTY_NPSM_PACKAGE_NAME}.tar.gz"

info_msg "===== adding push-stream-module to the ${OPENRESTY_GITHUB_PROJECT} 'mirror-tarballs' script"
sed "s/\(^.* \*\.tar\.gz$\)/ver=${NPSM_GITHUB_VERSION}\n\$root\/util\/get-tarball \"${ESCAPED_NPSM_GITHUB_TARBALL_URL}\" -O \"${OPENRESTY_NPSM_TARBALL_NAME}\" || exit 1\ntar -xzf ${OPENRESTY_NPSM_TARBALL_NAME} || exit 1\nmv ${NPSM_GITHUB_PACKAGE_NAME} ${OPENRESTY_NPSM_PACKAGE_NAME} || exit 1\n\n#################################\n\n\1/g" -i util/mirror-tarballs

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### get info for cache purge module | https://github.com/FRiCKLE/ngx_cache_purge

NCPM_GITHUB_USER='FRiCKLE'
NCPM_GITHUB_PROJECT='ngx_cache_purge'
info_msg "===== getting github project info for ${NCPM_GITHUB_USER}/${NCPM_GITHUB_PROJECT} latest version"
NCPM_GITHUB_INFO=$(curl https://api.github.com/repos/${NCPM_GITHUB_USER}/${NCPM_GITHUB_PROJECT}/tags 2>/dev/null)
NCPM_GITHUB_VERSION=$(echo "${NCPM_GITHUB_INFO}"| jq -r '.[0].name')
NCPM_GITHUB_TARBALL_URL=$(echo "${NCPM_GITHUB_INFO}"| jq -r '.[0].tarball_url')
NCPM_GITHUB_COMMIT_STRING=$(echo "${NCPM_GITHUB_INFO}" | jq -r '.[0].commit.sha[0:7]')
NCPM_GITHUB_PACKAGE_NAME="${NCPM_GITHUB_USER}-${NCPM_GITHUB_PROJECT}-${NCPM_GITHUB_COMMIT_STRING}"

### add  cache purge module to the openresty build system

ESCAPED_NCPM_GITHUB_TARBALL_URL=$(echo "${NCPM_GITHUB_TARBALL_URL}" | sed 's/\//\\\//g')
OPENRESTY_NCPM_PACKAGE_NAME="${NCPM_GITHUB_PROJECT}-${NCPM_GITHUB_VERSION}"
OPENRESTY_NCPM_TARBALL_NAME="${OPENRESTY_NCPM_PACKAGE_NAME}.tar.gz"

info_msg "===== adding cache purge module to the ${OPENRESTY_GITHUB_PROJECT} 'mirror-tarballs' script"
sed "s/\(^.* \*\.tar\.gz$\)/ver=${NCPM_GITHUB_VERSION}\n\$root\/util\/get-tarball \"${ESCAPED_NCPM_GITHUB_TARBALL_URL}\" -O \"${OPENRESTY_NCPM_TARBALL_NAME}\" || exit 1\ntar -xzf ${OPENRESTY_NCPM_TARBALL_NAME} || exit 1\nmv ${NCPM_GITHUB_PACKAGE_NAME} ${OPENRESTY_NCPM_PACKAGE_NAME} || exit 1\n\n#################################\n\n\1/g" -i util/mirror-tarballs

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### pull in openresty packages

info_msg "===== building ${OPENRESTY_GITHUB_PROJECT}-${OPENRESTY_GITHUB_COMMIT_STRING}/${OPENRESTY_GITHUB_VERSION} (= pre-build, pull down bundle) ..."
make -j 4

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### add ngx_cache_purge & nginx-push-stream-module into openresty configure script
### values in key-value pairs http_k_k => http_v_v are names of github projects
### ie nginx-push-stream-module, ngx_cache_purge
### super brittle, mmm

LOCAL_OPENRESTY_PACKAGE_VERSION=$(echo "${OPENRESTY_GITHUB_VERSION}" | sed -e 's/^v//g')
OPENRESTY_LOCAL_NGX_DIR="${OPENRESTY_GITHUB_PROJECT}-${LOCAL_OPENRESTY_PACKAGE_VERSION}"
info_msg "===== adding ${NPSM_GITHUB_PACKAGE_NAME} to ${OPENRESTY_LOCAL_NGX_DIR}/configure ..."
sed \
	-e "s/\(^ *\)\(\[http_rds_csv => 'rds-csv-nginx-module'\],$\)/\1\2\n\1[http_push_stream => 'nginx-push-stream-module'],\n\1[http_cache_purge => 'ngx_cache_purge'],/g" \
	-i ${OPENRESTY_LOCAL_NGX_DIR}/configure

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### patch nginx src to have a longer NGX_MAX_ERROR_STR
### so that apps can log more detailed info

NGX_MAX_ERROR_STR=8192
info_msg "===== patching nginx to have NGX_MAX_ERROR_STR = ${NGX_MAX_ERROR_STR} to have longer error log messages"
pushd ${OPENRESTY_LOCAL_NGX_DIR}/bundle/nginx-[0-9\.]*
sed "s/\(#define NGX_MAX_ERROR_STR *\)4096/\1\t${NGX_MAX_ERROR_STR}/g" -i src/core/ngx_log.h
# fix vim coloring with an errant "
info_msg "----- checking for NGX_MAX_ERROR_STR"
fgrep "define NGX_MAX_ERROR_STR" src/core/ngx_log.h
popd

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### patch nginx src to include https://github.com/openresty/lua-nginx-module/commit/b948841c0
### so that subrequests to WebDAV locations send correct headers

info_msg "===== patching nginx so that DAV subrequests send correct headers"
pushd ${OPENRESTY_LOCAL_NGX_DIR}/bundle/ngx_lua-[0-9\.]*
set +e
patch -p1 < /vagrant/patches/ngx_lua/0001-bugfix-setting-builtin-request-headers-Depth-Destina.patch
set -e
info_msg "----- checking for DAV subrequest patch"
fgrep -A 2 Destination src/ngx_http_lua_headers_in.c
popd

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### run openresty configure script, using choice configure options from 'nginx -V' in debian nginx package
### so we can take advantage of the very lovely init script and conf/packaging work the debian folks have done

info_msg "configure-ing ${OPENRESTY_LOCAL_NGX_DIR}"
cd ${OPENRESTY_LOCAL_NGX_DIR}
./configure \
--with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' \
--with-ld-opt=-Wl,-z,relro \
--with-luajit \
--with-pcre=../../${PCRE_VERSION} \
--with-pcre-jit \
--with-http_dav_module \
--prefix=/usr/share/nginx \
--conf-path=/etc/nginx/nginx.conf \
--http-log-path=/var/log/nginx/access.log \
--error-log-path=/var/log/nginx/error.log \
--lock-path=/var/lock/nginx.lock \
--pid-path=/run/nginx.pid \
--http-client-body-temp-path=/var/lib/nginx/body \
--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
--http-proxy-temp-path=/var/lib/nginx/proxy \
--http-scgi-temp-path=/var/lib/nginx/scgi \
--http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
--with-debug \
--with-ipv6 \
--with-http_ssl_module \
--with-http_stub_status_module \
--with-http_realip_module \
--with-http_auth_request_module \
--with-http_addition_module \
--with-http_geoip_module \
--with-http_gzip_static_module \
--with-http_sub_module

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### build & install openresty
### - package created by FPM will be openresty_<version>+push-stream-<version>_<arch>.deb

LOCAL_OPENRESTY_PACKAGE_NAME="${OPENRESTY_GITHUB_PROJECT}-${LOCAL_OPENRESTY_PACKAGE_VERSION}+${NPSM_GITHUB_PROJECT}"
info_msg "===== building ${LOCAL_OPENRESTY_PACKAGE_NAME}"
make -j 4

info_msg "===== installing ${LOCAL_OPENRESTY_PACKAGE_NAME}"
make install

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### set up necessary files for .deb package

# custom init script with paths pointing to .deb versions
info_msg "===== creating custom init script"
SYSTEM_INIT_DIR=/etc/init.d
SYSTEM_INIT_FILE=${SYSTEM_INIT_DIR}/nginx
NGINX_ETC_DIR=/usr/share/nginx/etc
NGINX_INIT_DIR=${NGINX_ETC_DIR}/init.d
NGINX_INIT_FILE=${NGINX_INIT_DIR}/nginx
mkdir -p ${NGINX_INIT_DIR}
sed \
	-e 's/^PATH=\(.*\)/PATH=\/usr\/share\/nginx\/nginx\/sbin:\1/g' \
	-e 's/^DAEMON=\(.*\)/DAEMON=\/usr\/share\/nginx\/nginx\/sbin\/nginx/g' \
	< ${SYSTEM_INIT_FILE} \
	> ${NGINX_INIT_FILE}

# create after-install script for .deb file
# replaces standard nginx init script from
# 'nginx-common' with a susbsitute version
# identical except for paths modified as above
AFTER_INSTALL_SCRIPT=${NGINX_ETC_DIR}/create-init-symlink
cat > ${AFTER_INSTALL_SCRIPT} <<EOF
rm ${SYSTEM_INIT_FILE}
chmod +x ${NGINX_INIT_FILE}
ln -s ${NGINX_INIT_FILE} ${SYSTEM_INIT_FILE}
EOF

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### build the .deb package

FPM_OPENRESTY_PACKAGE_VERSION=${LOCAL_OPENRESTY_PACKAGE_VERSION}+realtime-extras-vbox
FPM_OPENRESTY_FILE_PATHS="/usr/share/nginx/etc /usr/share/nginx/bin /usr/share/nginx/luajit /usr/share/nginx/lualib /usr/share/nginx/nginx"
info_msg "===== building .deb package for ${OPENRESTY_GITHUB_USER}/${FPM_OPENRESTY_PACKAGE_VERSION}"
info_msg "fpm -s dir -t deb -d 'nginx-common' -n ${OPENRESTY_GITHUB_USER} -v ${FPM_OPENRESTY_PACKAGE_VERSION} --after-install ${AFTER_INSTALL_SCRIPT} ${FPM_OPENRESTY_FILE_PATHS}"
fpm -s dir -t deb -d 'nginx-common' -n ${OPENRESTY_GITHUB_USER} -v ${FPM_OPENRESTY_PACKAGE_VERSION} --after-install ${AFTER_INSTALL_SCRIPT} ${FPM_OPENRESTY_FILE_PATHS}

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### get on the home straight

info_msg "===== moving .deb package to /vagrant"
mv ${OPENRESTY_GITHUB_USER}_*.deb /vagrant
info_msg "ls -l /vagrant"
ls -l /vagrant

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

### happy happy joy joy

info_msg "===== build complete" 
info_msg "##### done setting up openresty/nginx + push-stream module. #####"
exit 0
